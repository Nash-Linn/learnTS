{
  /*
    tsconfig.json 是ts编译器的配置文件, ts编译器可以根据它的信息来对代码进行编译
  */ 

  /*
    include 定义希望被编译文件所在的目录
        默认值
  
  */ 
  "include": [
    "./src/**/*"      //   **表示任意目录  *表示任意文件
  ],

  /*
    exclude 定义不希望被编译文件所在的目录
  */ 

  "exclude": [
    "./src/hello/**/*"
  ],

  /*
    extends
    定义被继承的配置文件   
    "extends" : "./config/base"
    当前配置文件中会自动包含config目录下base.json中的所有配置信息

  */ 
  
  /*
    files  指定被编译文件的列表, 只有需要编译的文件少时才会用到
  */ 

  /*
    compilerOptions 编译器选项
  */ 

  "compilerOptions": {
    // target 用来指定 TS 被编译的 ES 版本
    "target": "ES6",  //ESNext  表示最新版本
    //module 指定要使用的模块化的规范
    // "module": "es2015",
    "module": "commonjs",
    // module:"system",
    // lib 用来指定项目中要指定的库 (一般不设置)
    // "lib": []

    /*
      outDir 用来指定编译后文件所在的目录
    */ 
    "outDir": "./dist",

    // outFile 输出的文件 将代码合并为一个文件
    // 设置 outFile 后,所有的全局作用域中的代码会合并到同一个文件中
    //  如果使用模块化 那么就无法合并 module 选项 应该为 amd 或者 system
    // "outFile": "./merge/app.js"
    
    //allowJs 是否对js文件进行编译, 默认是false
    "allowJs": true,

    // 是否检查js代码 是否符合语法规范,默认是false  
    "checkJs": false,

    //removeComments 是否移除注释
    "removeComments": false,

    // 不生成编译后的文件
    "noEmit": false,

    //当有错误时不生成编译后的文件
    "noEmitOnError": true,

    //用来设置编译后的文件是否使用严格模式
    /*
      当JS文件中有引入/导出模块时 默认开启严格模式
    */ 
    "alwaysStrict":false,

    //不允许隐式的any类型
    "noImplicitAny": true,

    //不允许不明确类型的this
    "noImplicitThis": true,

    //严格检查空值
    "strictNullChecks": true,

    //所有严格检查的总开关 如果为true 所有的严格检查都开启
    "strict": false

  }



}